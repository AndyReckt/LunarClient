package com.moonsworth.lunar.bridge.lunar.input;

public enum KeyType {
    KEY_NONE,
    KEY_0,
    KEY_1,
    KEY_2,
    KEY_3,
    KEY_4,
    KEY_5,
    KEY_6,
    KEY_7,
    KEY_8,
    KEY_9,
    KEY_A,
    KEY_B,
    KEY_C,
    KEY_D,
    KEY_E,
    KEY_F,
    KEY_G,
    KEY_H,
    KEY_I,
    KEY_J,
    KEY_K,
    KEY_L,
    KEY_M,
    KEY_N,
    KEY_O,
    KEY_P,
    KEY_Q,
    KEY_R,
    KEY_S,
    KEY_T,
    KEY_U,
    KEY_V,
    KEY_W,
    KEY_X,
    KEY_Y,
    KEY_Z,
    KEY_RSHIFT,
    KEY_LSHIFT,
    KEY_FUNCTION,
    KEY_LCONTROL,
    KEY_RCONTROL,
    KEY_LCOMMAND,
    KEY_RCOMMAND,
    KEY_LWINDOWS,
    KEY_RWINDOWS,
    KEY_CLEAR,
    KEY_LMENU,
    KEY_RMENU,
    KEY_RETURN,
    KEY_ESCAPE,
    KEY_GRAVE,
    KEY_TAB,
    KEY_UP,
    KEY_BACK,
    KEY_LEFT,
    KEY_RIGHT,
    KEY_HOME,
    KEY_PGUP,
    KEY_PGDOWN,
    KEY_PG,
    KEY_END,
    KEY_DELETE,
    KEY_F1,
    KEY_F2,
    KEY_F3,
    KEY_F4,
    KEY_F5,
    KEY_F6,
    KEY_F7,
    KEY_F8,
    KEY_F9,
    KEY_F10,
    KEY_F11,
    KEY_F12,
    KEY_DOWN,
    KEY_SPACE,
    KEY_MOUSE1,
    KEY_MOUSE2,
    KEY_MOUSE3,
    KEY_MOUSE4,
    KEY_MOUSE5,
    KEY_MINUS,
    KEY_EQUALS,
    KEY_LBRACKET,
    KEY_RBRACKET,
    KEY_SEMICOLON,
    KEY_APOSTROPHE,
    KEY_BACKSLASH,
    KEY_COMMA,
    KEY_PERIOD,
    KEY_SLASH,
    KEY_MULTIPLY,
    KEY_CAPITAL,
    KEY_NUMLOCK,
    KEY_SCROLL,
    KEY_PRINTSC,
    KEY_NUMPAD7,
    KEY_NUMPAD8,
    KEY_NUMPAD9,
    KEY_SUBTRACT,
    KEY_NUMPAD4,
    KEY_NUMPAD5,
    KEY_NUMPAD6,
    KEY_ADD,
    KEY_NUMPAD1,
    KEY_NUMPAD2,
    KEY_NUMPAD3,
    KEY_NUMPAD0,
    KEY_DECIMAL,
    KEY_F13,
    KEY_F14,
    KEY_F15,
    KEY_F16,
    KEY_F17,
    KEY_F18,
    KEY_F19,
    KEY_NUMPADEQUALS,
    KEY_NUMPADENTER,
    KEY_DIVIDE,
    KEY_PAUSE,
    KEY_INSERT;

    // todo remap above and replace with this#name()

    public String lIlIlIlIlIIlIIlIIllIIIIIl() {
        String name;
        if (!name().contains("_")) {
            name = name();
        } else {
            name = name().split("_")[1];
        }
        String s = name.replace("MENU", "ALT");
        if (s.contains("META")) {
            if (System.getProperty("os.name").toLowerCase().contains("mac")) {
                s = s.replace("META", "COMMAND");
            } else {
                s = s.replace("META", "WINDOWS");
            }
        }
        return s.toUpperCase();
    }

    public boolean IlllIIIIIIlllIlIIlllIlIIl() {
        return this.name().startsWith("KEY_MOUSE");
    }
}